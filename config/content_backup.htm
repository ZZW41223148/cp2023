<h1>About</h1>
<p><a href="https://github.com/ZZW41223148/cp2023">https://github.com/ZZW41223148/cp2023</a></p>
<p></p>
<h1>Brython</h1>
<p><a href="https://en.wikipedia.org/wiki/Python_(programming_language)">https://en.wikipedia.org/wiki/Python_(programming_language)</a></p>
<h4>Examples:</h4>
<p style="padding-left: 30px;"><a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d">https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d</a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/python-programming-examples/">https://www.geeksforgeeks.org/python-programming-examples/</a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/python-programming/examples">https://www.programiz.com/python-programming/examples</a></p>
<p style="padding-left: 30px;"><a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/">https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/</a></p>
<h4>Python Tutorial:</h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/">https://docs.python.org/3/tutorial/</a></p>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/introduction.html">An informal introduction to Python</a></p>
<h4>Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍)</h4>
<h4>Variables (<a href="https://github.com/python/cpython/blob/3.11/Lib/keyword.py">Python Keywords</a>)</h4>
<h4>Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解)</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#numbers">Numbers</a> (整數 int(), 浮點數 float())</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#strings">Strings</a> (字串)</h4>
<h4>print (Python 內建函式, <a href="https://docs.python.org/3/library/functions.html#print">print()</a> 函式)</h4>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html">Python control flow tools</a></p>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements">for</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements">if</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function">range</a></h4>
<h4>open</h4>
<h4>read</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#lists">lists</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences">tuples</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries">dictionaries</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions">functions</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/errors.html#exceptions">try ... except</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops">break</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements">pass</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes">classes</a></h4>
<p>這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (<a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件).</p>
<p><a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.</p>
<p>亦即將所有對應的 html 也使用 Brython 產生, 然後寫為 <a href="https://docs.python.org/3/tutorial/classes.html">class</a> 後, 在範例導入時透過 <a href="https://docs.python.org/3/tutorial/classes.html#instance-objects">instance</a> 引用.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
&lt;/script&gt;</pre>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<p>將 iterable 與 iterator <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button><button id="threejsblock">Rotating Block</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2">
<h1>作業</h1>
<h2>W5</h2>
<div class="line number1 index0 alt2"><code class="cpp comments">// 包含標準輸出入程式庫的標頭文件</code></div>
<div class="line number2 index1 alt1"><code class="cpp comments">// https://blog.csdn.net/weixin_38468077/article/details/101069365</code></div>
<div class="line number3 index2 alt2"><code class="cpp comments">// http://www.gnuplot.info/demo/</code></div>
<div class="line number4 index3 alt1"><code class="cpp comments">// https://github.com/sysprog21/rv32emu</code></div>
<div class="line number5 index4 alt2"><code class="cpp comments">// https://github.com/sysprog21/semu </code></div>
<div class="line number6 index5 alt1"><code class="cpp comments">// https://docs.google.com/presentation/d/14N0cWG2SnBSqhc2cLF0_2VerB9FF8JN3</code></div>
<div class="line number7 index6 alt2"><code class="cpp comments">// https://cs61c.org/fa23/</code></div>
<div class="line number8 index7 alt1"><code class="cpp comments">// https://greenteapress.com/wp/think-python-2e/</code></div>
<div class="line number9 index8 alt2"><code class="cpp comments">// https://github.com/ecalvadi/c99-examples</code></div>
<div class="line number10 index9 alt1"><code class="cpp comments">// https://github.com/gouravthakur39/beginners-C-program-examples</code></div>
<div class="line number11 index10 alt2"><code class="cpp comments">// https://github.com/ergenekonyigit/Numerical-Analysis-Examples</code></div>
<div class="line number12 index11 alt1"><code class="cpp comments">// https://www.che.ncku.edu.tw/facultyweb/changct/html/teaching/CPPandMATLAB/Past/pdf%20Files/Chap02-Ling.pdf</code></div>
<div class="line number13 index12 alt2"><code class="cpp comments">// https://gteceducation.com.sg/Brochures/PROGRAMMING/C%20PROGRAMMING%20FULL.pdf</code></div>
<div class="line number14 index13 alt1"><code class="cpp comments">// https://jsommers.github.io/cbook/cbook.pdf</code></div>
<div class="line number15 index14 alt2"><code class="cpp comments">// https://jsommers.github.io/cbook/index.html</code></div>
<div class="line number16 index15 alt1"><code class="cpp comments">// http://student.itee.uq.edu.au/courses/csse2310/CProgrammingNotes.pdf</code></div>
<div class="line number17 index16 alt2"><code class="cpp comments">// http://cslibrary.stanford.edu/101/EssentialC.pdf</code></div>
<div class="line number18 index17 alt1"><code class="cpp comments">// https://publications.gbdirect.co.uk/c_book/</code></div>
<div class="line number19 index18 alt2"><code class="cpp comments">// https://www.fossil-scm.org/fossil-book/doc/2ndEdition/fossilbook.pdf</code></div>
<div class="line number20 index19 alt1"><code class="cpp comments">// ***** execute on replit </code></div>
<div class="line number21 index20 alt2"><code class="cpp comments">// cd downloads</code></div>
<div class="line number22 index21 alt1"><code class="cpp comments">// cc gnuplot_ex1.c -o gnuplot_ex1</code></div>
<div class="line number23 index22 alt2"><code class="cpp comments">// ./gnuplot_ex1</code></div>
<div class="line number24 index23 alt1"><code class="cpp preprocessor">#include &lt;stdio.h&gt;</code></div>
<div class="line number25 index24 alt2"><code class="cpp spaces"> </code> </div>
<div class="line number26 index25 alt1"><code class="cpp comments">// 主函式</code></div>
<div class="line number27 index26 alt2"><code class="cpp color1 bold">int</code> <code class="cpp plain">main() {</code></div>
<div class="line number28 index27 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// Start a Gnuplot process using popen</code></div>
<div class="line number29 index28 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">FILE</code> <code class="cpp plain">*gnuplotPipe = popen(</code><code class="cpp string">"gnuplot -persistent"</code><code class="cpp plain">, </code><code class="cpp string">"w"</code><code class="cpp plain">);</code></div>
<div class="line number30 index29 alt1"><code class="cpp spaces">    </code><code class="cpp keyword bold">if</code> <code class="cpp plain">(!gnuplotPipe) {</code></div>
<div class="line number31 index30 alt2"><code class="cpp spaces">        </code><code class="cpp functions bold">fprintf</code><code class="cpp plain">(stderr, </code><code class="cpp string">"Failed to start Gnuplot.\n"</code><code class="cpp plain">);</code></div>
<div class="line number32 index31 alt1"><code class="cpp spaces">        </code><code class="cpp keyword bold">return</code> <code class="cpp plain">1;</code></div>
<div class="line number33 index32 alt2"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number34 index33 alt1"><code class="cpp spaces"> </code> </div>
<div class="line number35 index34 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// Use Gnuplot plotting commands, specify font and output as PNG</code></div>
<div class="line number36 index35 alt1"><code class="cpp spaces">    </code><code class="cpp functions bold">fprintf</code><code class="cpp plain">(gnuplotPipe, </code><code class="cpp string">"set terminal png font 'default,10' size 800,400\n"</code><code class="cpp plain">);</code></div>
<div class="line number37 index36 alt2"><code class="cpp spaces">    </code><code class="cpp functions bold">fprintf</code><code class="cpp plain">(gnuplotPipe, </code><code class="cpp string">"set output './../images/gnuplot_ex1.png'\n"</code><code class="cpp plain">);</code></div>
<div class="line number38 index37 alt1"><code class="cpp spaces">    </code><code class="cpp functions bold">fprintf</code><code class="cpp plain">(gnuplotPipe, </code><code class="cpp string">"plot sin(x)"</code><code class="cpp plain">);</code></div>
<div class="line number39 index38 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// Close popen</code></div>
<div class="line number40 index39 alt1"><code class="cpp spaces">    </code><code class="cpp plain">pclose(gnuplotPipe);</code></div>
<div class="line number41 index40 alt2"><code class="cpp spaces"> </code> </div>
<div class="line number42 index41 alt1"><code class="cpp spaces">    </code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div>
<div class="line number43 index42 alt2"><code class="cpp plain">}</code></div>
<div class="line number43 index42 alt2"><code class="cpp plain"></code></div>
<div class="line number43 index42 alt2"><code class="cpp plain"><img alt="" height="295" src="/images/ex1.png" width="521"/></code></div>
<div class="line number43 index42 alt2">
<h2>W6</h2>
<p>// https://en.wikipedia.org/wiki/Flag_of_the_Republic_of_China<br/>// 內政部國旗參考資料: https://www.moi.gov.tw/cp.aspx?n=10621<br/>// cc roc_flag_in_gd.c -lgd -lm to link with gd and math library<br/>// https://www.rapidtables.com/web/color/RGB_Color.html<br/>// 幾何形狀著色與繪圖練習<br/>// 以下 gd 繪圖程式嘗試畫出 ROC 國旗, 請根據下列程式內容完成後續的國旗繪圖<br/>#include &lt;stdio.h&gt;<br/>#include &lt;gd.h&gt;<br/>#include &lt;math.h&gt;</p>
<p>void draw_roc_flag(gdImagePtr img);<br/>void draw_white_sun(gdImagePtr img, int x, int y, int size, int color);</p>
<p>int main() {<br/> // width 3: height 2<br/> int width = 1200;<br/> // 國旗長寬比為 3:2<br/> int height = (int)(width*2.0 / 3.0);</p>
<p>gdImagePtr img = gdImageCreateTrueColor(width, height);<br/> gdImageAlphaBlending(img, 0);</p>
<p>draw_roc_flag(img);</p>
<p>FILE *outputFile = fopen("./../images/roc_flag_in_gd.png", "wb");<br/> if (outputFile == NULL) {<br/> fprintf(stderr, "Error opening the output file.\n");<br/> return 1;<br/> }<br/> gdImagePngEx(img, outputFile, 9);<br/> fclose(outputFile);<br/> gdImageDestroy(img);<br/> return 0;<br/>}</p>
<p>void draw_roc_flag(gdImagePtr img) {<br/> int width = gdImageSX(img);<br/> int height = gdImageSY(img);<br/> int red, white, blue;<br/> // 白日位於青天面積正中央, 因此中心點座標為長寬各 1/4 處<br/> int center_x = (int)(width/4);<br/> int center_y = (int)(height/4);<br/> // gdImageFilledEllipse 需以長寬方向的 diameter 作圖<br/> // 由於中央白日圓形的半徑為青天寬度的 1/8<br/> // 因此中央白日圓形的直徑為青天寬度的 1/4, 也就是國旗寬度的 1/8<br/> // 而且白日十二道光芒的外圍圓形其半徑也是國旗寬度的1/8<br/> int sun_radius = (int)(width/8);<br/> // 中央白日圓形的直徑等於十二道光芒外圍圓形的半徑<br/> int white_circle_dia = sun_radius;<br/> // 中央藍色圓形半徑為中央白日的 1又 2/15<br/> int blue_circle_dia = white_circle_dia + white_circle_dia*2/15;<br/> // 根據 https://www.moi.gov.tw/cp.aspx?n=10621 訂定國旗三種顏色值<br/> red = gdImageColorAllocate(img, 255, 0, 0); // 紅色<br/> white = gdImageColorAllocate(img, 255, 255, 255); // 白色<br/> blue = gdImageColorAllocate(img, 0, 0, 149); // 藍色<br/> // 根據畫布大小塗上紅色長方形區域<br/> gdImageFilledRectangle(img, 0, 0, width, height, red);<br/> // 青天面積為整面國旗的 1/4, 也是採用長方形塗色<br/> gdImageFilledRectangle(img, 0, 0, (int)(width/2.0), (int)(height/2.0), blue);<br/> // 先設法以填色畫出六個白色堆疊菱形<br/> draw_white_sun(img, center_x, center_y, sun_radius, white);<br/> // 利用一個藍色大圓與白色小圓畫出藍色環狀<br/> gdImageFilledEllipse(img, center_x, center_y, blue_circle_dia, blue_circle_dia, blue);<br/> gdImageFilledEllipse(img, center_x, center_y, white_circle_dia, white_circle_dia, white);</p>
<p>}</p>
<p>void draw_white_sun(gdImagePtr img, int center_x, int center_y, int sun_radius, int color) {<br/> // M_PI 大小定義於 math.h 標頭檔中, 因為三角函數中採用徑度為角度單位<br/> // 因此定義將角度轉為徑度的轉換變數為 deg, 角度值乘上 deg 就可轉為徑度<br/> float deg = M_PI/180;<br/> // 根據十二道光芒的每一尖角的角度為 15 度, 求出其對應直角三角形的另一角度為 75 度<br/> // 求出十二道光芒中任一菱形的 small radius, 也就是菱形的另一個對應小圓的半徑大小<br/> float sr = sun_radius/tan(75*deg);<br/> int ax, ay, bx, by, dx, dy, ex, ey;<br/> gdPoint points[4];<br/> /* 在塗上十二道光芒中的單一菱形區域之前, 先以座標點畫線測試是否正確<br/> ax = center_x;<br/> ay = center_y - sun_radius;<br/> bx = center_x - sun_radius*tan(15*deg);<br/> by = center_y;<br/> ex = center_x;<br/> ey = center_y + sun_radius;<br/> dx = center_x + sun_radius*tan(15*deg);<br/> dy = center_y;<br/> // AB<br/> gdImageLine(img, ax, ay, bx, by, color);<br/> // BE<br/> gdImageLine(img, bx, by, ex, ey, color);<br/> // ED<br/> gdImageLine(img, ex, ey, dx, dy, color);<br/> // DA<br/> gdImageLine(img, dx, dy, ax, ay, color);<br/> */<br/> ax = center_x;<br/> ay = center_y - sun_radius;<br/> bx = center_x - sun_radius*tan(15*deg);<br/> by = center_y;<br/> ex = center_x;<br/> ey = center_y + sun_radius;<br/> dx = center_x + sun_radius*tan(15*deg);<br/> dy = center_y;<br/> // 確定單一菱形區域的塗色正確後, 利用迴圈每次轉動 30 度, 總共轉六次即可塗上十二道光芒區域<br/> for (int i=1;i&lt;=6;i++){<br/> // A<br/> points[0].x = ax+sun_radius*sin(30*deg*i);<br/> points[0].y = ay+sun_radius-sun_radius*cos(30*deg*i);<br/> // B<br/> points[1].x = bx+sr-sr*cos(30*deg*i);<br/> points[1].y = by-sr*sin(30*deg*i);<br/> // E<br/> points[2].x = ex-sun_radius*sin(30*deg*i);<br/> points[2].y = ey-(sun_radius-sun_radius*cos(30*deg*i));<br/> // D<br/> points[3].x = dx-(sr-sr*cos(30*deg*i));<br/> points[3].y = dy+sr*sin(30*deg*i);<br/> // 對菱形區域範圍塗色<br/> gdImageFilledPolygon(img, points, 4, color);<br/> // 在菱形區域外圍畫線, 明確界定菱形範圍<br/> gdImagePolygon(img, points, 4, color);<br/> }<br/>}</p>
<p></p><h1>C程式練習</h1>
<h2>1</h2>
<p>判斷輸入數字是否為醜數</p>
<pre class="line-numbers language-c"><code># include &lt;stdio.h&gt;
# include &lt;string.h&gt;

int main()
{
int n,x=0;
  printf("\n\n Check whether a given number is an ugly number:\n");
  printf("----------------------------------------------------\n");
  printf("Input an integer number: ");
  scanf("%d",&amp;n);

      if (n &lt;= 0) {  
            printf("Input a correct number.");  
        }
       while (n != 1) 
       {  
            if (n % 5 == 0) 
            {  
                n /= 5;  
            } 
            else if (n % 3 == 0) 
            {  
                n /= 3;  
            } 
            else if (n % 2 == 0) 
            {  
                n /= 2;  
            } 
            else 
            {  
                printf("It is not an ugly number.\n"); 
                x = 1;  
                break;  
            }  
        } 
		        if (x==0)
		        { 
                printf("It is an ugly number.\n");
                }
}</code><code class="language-c">
</code></pre>
<pre class="line-numbers language-c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span> <span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span> <span class="token directive keyword">include</span> <span class="token string">&lt;string.h&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
<span class="token keyword">int</span> n<span class="token punctuation">,</span>x<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n\n Check whether a given number is an ugly number:\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"----------------------------------------------------\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Input an integer number: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Input a correct number."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token punctuation">}</span>
       <span class="token keyword">while</span> <span class="token punctuation">(</span>n <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">)</span> 
       <span class="token punctuation">{</span>  
            <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">%</span> <span class="token number">5</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> 
            <span class="token punctuation">{</span>  
                n <span class="token operator">/=</span> <span class="token number">5</span><span class="token punctuation">;</span>  
            <span class="token punctuation">}</span> 
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">%</span> <span class="token number">3</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> 
            <span class="token punctuation">{</span>  
                n <span class="token operator">/=</span> <span class="token number">3</span><span class="token punctuation">;</span>  
            <span class="token punctuation">}</span> 
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> 
            <span class="token punctuation">{</span>  
                n <span class="token operator">/=</span> <span class="token number">2</span><span class="token punctuation">;</span>  
            <span class="token punctuation">}</span> 
            <span class="token keyword">else</span> 
            <span class="token punctuation">{</span>  
                <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"It is not an ugly number.\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
                x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  
                <span class="token keyword">break</span><span class="token punctuation">;</span>  
            <span class="token punctuation">}</span>  
        <span class="token punctuation">}</span> 
		        <span class="token keyword">if</span> <span class="token punctuation">(</span>x<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span>
		        <span class="token punctuation">{</span> 
                <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"It is an ugly number.\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
</code><code class="language-c"><span class="token punctuation">}</span></code><code class="language-c">
</code></pre>
<pre class="line-numbers language-c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span> <span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span> <span class="token directive keyword">include</span> <span class="token string">&lt;string.h&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
<span class="token keyword">int</span> n<span class="token punctuation">,</span>x<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n\n Check whether a given number is an ugly number:\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"----------------------------------------------------\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Input an integer number: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Input a correct number."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token punctuation">}</span>
       <span class="token keyword">while</span> <span class="token punctuation">(</span>n <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">)</span> 
       <span class="token punctuation">{</span>  
            <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">%</span> <span class="token number">5</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> 
            <span class="token punctuation">{</span>  
                n <span class="token operator">/=</span> <span class="token number">5</span><span class="token punctuation">;</span>  
            <span class="token punctuation">}</span> 
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">%</span> <span class="token number">3</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> 
            <span class="token punctuation">{</span>  
                n <span class="token operator">/=</span> <span class="token number">3</span><span class="token punctuation">;</span>  
            <span class="token punctuation">}</span> 
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> 
            <span class="token punctuation">{</span>  
                n <span class="token operator">/=</span> <span class="token number">2</span><span class="token punctuation">;</span>  
            <span class="token punctuation">}</span> 
            <span class="token keyword">else</span> 
            <span class="token punctuation">{</span>  
                <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"It is not an ugly number.\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
                x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  
                <span class="token keyword">break</span><span class="token punctuation">;</span>  
            <span class="token punctuation">}</span>  
        <span class="token punctuation">}</span> 
		        <span class="token keyword">if</span> <span class="token punctuation">(</span>x<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span>
		        <span class="token punctuation">{</span> 
                <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"It is an ugly number.\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
</code><code class="language-c"><span class="token punctuation">}</span></code><code class="language-c">
</code></pre>
<pre class="line-numbers language-c"><code># include &lt;stdio.h&gt;
# include &lt;string.h&gt;

int main()
{
int n,x=0;
  printf("\n\n Check whether a given number is an ugly number:\n");
  printf("----------------------------------------------------\n");
  printf("Input an integer number: ");
  scanf("%d",&amp;n);

      if (n &lt;= 0) {  
            printf("Input a correct number.");  
        }
       while (n != 1) 
       {  
            if (n % 5 == 0) 
            {  
                n /= 5;  
            } 
            else if (n % 3 == 0) 
            {  
                n /= 3;  
            } 
            else if (n % 2 == 0) 
            {  
                n /= 2;  
            } 
            else 
            {  
                printf("It is not an ugly number.\n"); 
                x = 1;  
                break;  
            }  
        } 
		        if (x==0)
		        { 
                printf("It is an ugly number.\n");
                }
}</code><code class="language-c">
</code></pre>
<h2>2</h2>
<p>反轉整串輸入的數字</p>
<p>#include &lt;stdio.h&gt;<br/>int reverse(int n) {<br/> int d, y = 0;<br/> while (n) {<br/> d = n % 10;<br/> if ((n &gt; 0 &amp;&amp; y &gt; (0x7fffffff - d) / 10) ||<br/> (n &lt; 0 &amp;&amp; y &lt; ((signed)0x80000000 - d) / 10)) {<br/> return 0; <br/> }<br/> y = y * 10 + d;<br/> n = n / 10;<br/> }<br/> return y; <br/>}</p>
<p>int main(void)<br/>{<br/> int i = 123;<br/> printf("Original integer: %d ",i);<br/> printf("\nReverse integer: %d ",reverse(i));<br/> i = 208478933;<br/> printf("\nOriginal integer: %d ",i);<br/> printf("\nReverse integer: %d ",reverse(i));<br/> i = -73634;<br/> printf("\nOriginal integer: %d ",i);<br/> printf("\nReverse integer: %d ",reverse(i));<br/> return 0;<br/>}</p>
<h2>3</h2>
<p>計算x的n次方</p>
<p>#include &lt;stdio.h&gt;<br/>#include &lt;limits.h&gt;</p>
<p>double powxn(double x, int n) {<br/> double k;<br/> if (n == 0) return 1;<br/> k = powxn(x * x, n / 2);<br/> if (n % 2) k = k * x;<br/> return k;<br/>}</p>
<p>int main(void)<br/>{<br/> double x = 7.0;<br/> int n = 2;<br/> printf("\nx = %f, y = %d ", x, n);<br/> printf("\nResult:(x^n) : %f ",powxn(x, n));<br/> x = 6.2;<br/> n = 3;<br/> printf("\n\nx = %f, y = %d ", x, n);<br/> printf("\nResult:(x^n) : %f ",powxn(x, n));<br/> return 0;<br/>}</p>
<h2>4</h2>
<p>判斷數字是否為環狀質數</p>
<p># include &lt;stdio.h&gt;<br/># include &lt;stdlib.h&gt;<br/># include &lt;stdbool.h&gt;<br/># include &lt;math.h&gt;</p>
<p><br/>int flg;<br/>void chkPrime(long int n)<br/>{<br/> long int i;<br/> i=n-1;<br/> while(i&gt;=2)<br/> {<br/> if(n%i==0)<br/> {<br/> flg=1;<br/> }<br/> i--;<br/> }<br/>}<br/>void AllCombination(long int a)<br/>{<br/> long int b1,c1,d1,e1,i,j,k,s1,z1,v1,x[8],y[8],m;<br/> b1=a;<br/> i=0;<br/> while(b1&gt;0)<br/> {<br/> y[i]=b1 % 10;<br/> b1=b1/10;<br/> i++;<br/> }<br/> c1=0;<br/> for(j=i-1;j&gt;=0;j--)<br/> {<br/> x[c1]=y[j];<br/> c1++;<br/> }<br/> m=i;<br/> while(m&gt;0)<br/> {<br/> c1=m-1;<br/> d1=i-1;<br/> e1=0;<br/> s1=0;<br/> while(e1&lt;i)<br/> {<br/> z1=pow(10,d1);<br/> v1=z1*x[c1%i];<br/> c1++;<br/> d1--;<br/> e1++;<br/> s1=s1+v1;<br/> }<br/> m--;<br/> chkPrime(s1);<br/> }<br/>}<br/>int main()<br/>{<br/> long int num1;<br/> printf("\n\n Check whether a given number is circular prime or not: \n");<br/> printf(" -----------------------------------------------------------\n");<br/> printf(" Input a Number: ");<br/> scanf("%li",&amp;num1);<br/> flg=0;<br/> AllCombination(num1);<br/> if(flg==0)<br/> {<br/> printf(" The given number is a circular prime Number.\n");<br/> }<br/> else<br/> {<br/> printf(" The given number is not a circular prime Number.\n");<br/> }<br/> return 0; <br/> printf("\n");<br/>}</p>
<h2>5</h2>
<p>計算輸入數字的平方</p>
<p>#include &lt;stdio.h&gt;</p>
<p>double square(double num)<br/>{<br/> return (num * num);<br/>}<br/>int main()<br/>{<br/> int num;<br/> double n;<br/> printf("\n\n Function : find square of any number :\n");<br/> printf("------------------------------------------------\n"); <br/> <br/> printf("Input any number for square : ");<br/> scanf("%d", &amp;num);<br/> n = square(num);<br/> printf("The square of %d is : %.2f\n", num, n); <br/> return 0;<br/>}</p>
<h2>6</h2>
<p>判斷輸入數字為基數或偶數</p>
<p>#include &lt;stdio.h&gt;<br/> <br/>//if the least significant bit is 1 the number is odd and 0 the number is even <br/>int checkOddEven(int n1)<br/>{ <br/> return (n1 &amp; 1);//The &amp; operator does a bitwise and,<br/>}</p>
<p>int main()<br/>{<br/> int n1;<br/> printf("\n\n Function : check the number is even or odd:\n");<br/> printf("------------------------------------------------\n"); <br/> printf("Input any number : ");<br/> scanf("%d", &amp;n1);</p>
<p>// If checkOddEven() function returns 1 then the number is odd <br/> if(checkOddEven(n1))<br/> {<br/> printf("The entered number is odd.\n\n");<br/> }<br/> else<br/> {<br/> printf("The entered number is even.\n\n");<br/> }<br/> return 0;<br/>}</p>
<h2>7</h2>
<p>利用函數將數入數字變為二進制</p>
<p>#include&lt;stdio.h&gt;</p>
<p>long toBin(int);</p>
<p>int main()<br/>{<br/> long bno;<br/> int dno;<br/> printf("\n\n Function : convert decimal to binary :\n");<br/> printf("-------------------------------------------\n"); <br/> printf(" Input any decimal number : ");<br/> scanf("%d",&amp;dno);<br/> bno = toBin(dno);<br/> printf("\n The Binary value is : %ld\n\n",bno);</p>
<p>return 0;<br/>}<br/>long toBin(int dno)<br/>{<br/> long bno=0,remainder,f=1;<br/> while(dno != 0)<br/> {<br/> remainder = dno % 2;<br/> bno = bno + remainder * f;<br/> f = f * 10;<br/> dno = dno / 2;<br/> }<br/> return bno;<br/>}</p>
<h2>8</h2>
<p>判斷輸入數字是否為完全立方數</p>
<p># include &lt;stdio.h&gt;<br/># include &lt;stdlib.h&gt;<br/># include &lt;math.h&gt;</p>
<p><br/>int main() <br/>{ <br/>int num, curoot,ans;</p>
<p>printf("\n\n Check whether a number is a perfect cube or not: \n");<br/> printf(" -----------------------------------------------------\n");<br/> printf(" Input a number: ");<br/> scanf("%d",&amp;num);<br/>curoot=round(pow(num, 1.0/3.0));</p>
<p>if(curoot*curoot*curoot==num)<br/>{<br/> printf(" The number is a perfect Cube of %d \n",curoot); <br/>}<br/>else<br/>{<br/> printf(" The number is not a perfect Cube.\n"); <br/>}<br/>}</p>
<h2>9</h2>
<p>輸出目前的日期和時間</p>
<p>#include &lt;time.h&gt;<br/>#include &lt;stdio.h&gt; <br/>#include &lt;stdlib.h&gt;</p>
<p>int main(void)<br/>{<br/> time_t cur_time;<br/> char* cur_t_string;<br/> cur_time = time(NULL);<br/> if (cur_time == ((time_t)-1))<br/> {<br/> (void) fprintf(stderr, "Failure to get the current date and time.\n");<br/> exit(EXIT_FAILURE);<br/> }<br/> cur_t_string = ctime(&amp;cur_time); //convert to local time format<br/> if (cur_t_string == NULL)<br/> {<br/> (void) fprintf(stderr, "Failure to convert the current date and time.\n");<br/> exit(EXIT_FAILURE);<br/> }<br/> (void) printf("\n The Current time is : %s \n", cur_t_string);<br/> exit(EXIT_SUCCESS);<br/>}</p>
<h2>10</h2>
<p>輸出月初到現在過了幾秒</p>
<p>#include &lt;stdio.h&gt;<br/>#include &lt;time.h&gt;<br/> <br/>int main(void)<br/>{<br/> time_t now;<br/> time(&amp;now);<br/> <br/> struct tm beg_month;<br/> beg_month = *localtime(&amp;now);<br/> beg_month.tm_hour = 0;<br/> beg_month.tm_min = 0;<br/> beg_month.tm_sec = 0;<br/> beg_month.tm_mday = 1;<br/> <br/> double seconds = difftime(now, mktime(&amp;beg_month));<br/> printf("\n %.f seconds passed since the beginning of the month.\n\n", seconds);<br/> return 0;<br/>}</p>
<!-- editor2 結束 -->
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>
</div>
</div>