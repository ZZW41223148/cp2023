var tipuesearch = {"pages": [{'title': 'About', 'text': 'https://github.com/ZZW41223148/cp2023 \n \n', 'tags': '', 'url': 'About.html'}, {'title': 'Brython', 'text': 'https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍) \n Variables ( Python Keywords ) \n Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解) \n Numbers  (整數 int(), 浮點數 float()) \n Strings  (字串) \n print (Python 內建函式,  print()  函式) \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n', 'tags': '', 'url': 'Brython.html'}, {'title': '作業', 'text': '', 'tags': '', 'url': '作業.html'}, {'title': 'W5', 'text': '// 包含標準輸出入程式庫的標頭文件 \n // https://blog.csdn.net/weixin_38468077/article/details/101069365 \n // http://www.gnuplot.info/demo/ \n // https://github.com/sysprog21/rv32emu \n // https://github.com/sysprog21/semu  \n // https://docs.google.com/presentation/d/14N0cWG2SnBSqhc2cLF0_2VerB9FF8JN3 \n // https://cs61c.org/fa23/ \n // https://greenteapress.com/wp/think-python-2e/ \n // https://github.com/ecalvadi/c99-examples \n // https://github.com/gouravthakur39/beginners-C-program-examples \n // https://github.com/ergenekonyigit/Numerical-Analysis-Examples \n // https://www.che.ncku.edu.tw/facultyweb/changct/html/teaching/CPPandMATLAB/Past/pdf%20Files/Chap02-Ling.pdf \n // https://gteceducation.com.sg/Brochures/PROGRAMMING/C%20PROGRAMMING%20FULL.pdf \n // https://jsommers.github.io/cbook/cbook.pdf \n // https://jsommers.github.io/cbook/index.html \n // http://student.itee.uq.edu.au/courses/csse2310/CProgrammingNotes.pdf \n // http://cslibrary.stanford.edu/101/EssentialC.pdf \n // https://publications.gbdirect.co.uk/c_book/ \n // https://www.fossil-scm.org/fossil-book/doc/2ndEdition/fossilbook.pdf \n // ***** execute on replit  \n // cd downloads \n // cc gnuplot_ex1.c -o gnuplot_ex1 \n // ./gnuplot_ex1 \n #include <stdio.h> \n \xa0 \xa0 \n // 主函式 \n int   main() { \n \xa0\xa0\xa0\xa0 // Start a Gnuplot process using popen \n \xa0\xa0\xa0\xa0 FILE   *gnuplotPipe = popen( "gnuplot -persistent" ,  "w" ); \n \xa0\xa0\xa0\xa0 if   (!gnuplotPipe) { \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 fprintf (stderr,  "Failed to start Gnuplot.\\n" ); \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 return   1; \n \xa0\xa0\xa0\xa0 } \n \xa0 \xa0 \n \xa0\xa0\xa0\xa0 // Use Gnuplot plotting commands, specify font and output as PNG \n \xa0\xa0\xa0\xa0 fprintf (gnuplotPipe,  "set terminal png font \'default,10\' size 800,400\\n" ); \n \xa0\xa0\xa0\xa0 fprintf (gnuplotPipe,  "set output \'./../images/gnuplot_ex1.png\'\\n" ); \n \xa0\xa0\xa0\xa0 fprintf (gnuplotPipe,  "plot sin(x)" ); \n \xa0\xa0\xa0\xa0 // Close popen \n \xa0\xa0\xa0\xa0 pclose(gnuplotPipe); \n \xa0 \xa0 \n \xa0\xa0\xa0\xa0 return   0; \n } \n \n \n \n', 'tags': '', 'url': 'W5.html'}, {'title': 'W6', 'text': '// https://en.wikipedia.org/wiki/Flag_of_the_Republic_of_China // 內政部國旗參考資料: https://www.moi.gov.tw/cp.aspx?n=10621 // cc roc_flag_in_gd.c -lgd -lm to link with gd and math library // https://www.rapidtables.com/web/color/RGB_Color.html // 幾何形狀著色與繪圖練習 // 以下 gd 繪圖程式嘗試畫出 ROC 國旗, 請根據下列程式內容完成後續的國旗繪圖 #include <stdio.h> #include <gd.h> #include <math.h> \n void draw_roc_flag(gdImagePtr img); void draw_white_sun(gdImagePtr img, int x, int y, int size, int color); \n int main() {  // width 3: height 2  int width = 1200;  // 國旗長寬比為 3:2  int height = (int)(width*2.0 / 3.0); \n gdImagePtr img = gdImageCreateTrueColor(width, height);  gdImageAlphaBlending(img, 0); \n draw_roc_flag(img); \n FILE *outputFile = fopen("./../images/roc_flag_in_gd.png", "wb");  if (outputFile == NULL) {  fprintf(stderr, "Error opening the output file.\\n");  return 1;  }  gdImagePngEx(img, outputFile, 9);  fclose(outputFile);  gdImageDestroy(img);  return 0; } \n void draw_roc_flag(gdImagePtr img) {  int width = gdImageSX(img);  int height = gdImageSY(img);  int red, white, blue;  // 白日位於青天面積正中央, 因此中心點座標為長寬各 1/4 處  int center_x = (int)(width/4);  int center_y = (int)(height/4);  // gdImageFilledEllipse 需以長寬方向的 diameter 作圖  // 由於中央白日圓形的半徑為青天寬度的 1/8  // 因此中央白日圓形的直徑為青天寬度的 1/4, 也就是國旗寬度的 1/8  // 而且白日十二道光芒的外圍圓形其半徑也是國旗寬度的1/8  int sun_radius = (int)(width/8);  // 中央白日圓形的直徑等於十二道光芒外圍圓形的半徑  int white_circle_dia = sun_radius;  // 中央藍色圓形半徑為中央白日的 1又 2/15  int blue_circle_dia = white_circle_dia + white_circle_dia*2/15;  // 根據 https://www.moi.gov.tw/cp.aspx?n=10621 訂定國旗三種顏色值  red = gdImageColorAllocate(img, 255, 0, 0); // 紅色  white = gdImageColorAllocate(img, 255, 255, 255); // 白色  blue = gdImageColorAllocate(img, 0, 0, 149); // 藍色  // 根據畫布大小塗上紅色長方形區域  gdImageFilledRectangle(img, 0, 0, width, height, red);  // 青天面積為整面國旗的 1/4, 也是採用長方形塗色  gdImageFilledRectangle(img, 0, 0, (int)(width/2.0), (int)(height/2.0), blue);  // 先設法以填色畫出六個白色堆疊菱形  draw_white_sun(img, center_x, center_y, sun_radius, white);  // 利用一個藍色大圓與白色小圓畫出藍色環狀  gdImageFilledEllipse(img, center_x, center_y, blue_circle_dia, blue_circle_dia, blue);  gdImageFilledEllipse(img, center_x, center_y, white_circle_dia, white_circle_dia, white); \n } \n void draw_white_sun(gdImagePtr img, int center_x, int center_y, int sun_radius, int color) {  // M_PI 大小定義於 math.h 標頭檔中, 因為三角函數中採用徑度為角度單位  // 因此定義將角度轉為徑度的轉換變數為 deg, 角度值乘上 deg 就可轉為徑度  float deg = M_PI/180;  // 根據十二道光芒的每一尖角的角度為 15 度, 求出其對應直角三角形的另一角度為 75 度  // 求出十二道光芒中任一菱形的 small radius, 也就是菱形的另一個對應小圓的半徑大小  float sr = sun_radius/tan(75*deg);  int ax, ay, bx, by, dx, dy, ex, ey;  gdPoint points[4];  /* 在塗上十二道光芒中的單一菱形區域之前, 先以座標點畫線測試是否正確  ax = center_x;  ay = center_y - sun_radius;  bx = center_x - sun_radius*tan(15*deg);  by = center_y;  ex = center_x;  ey = center_y + sun_radius;  dx = center_x + sun_radius*tan(15*deg);  dy = center_y;  // AB  gdImageLine(img, ax, ay, bx, by, color);  // BE  gdImageLine(img, bx, by, ex, ey, color);  // ED  gdImageLine(img, ex, ey, dx, dy, color);  // DA  gdImageLine(img, dx, dy, ax, ay, color);  */  ax = center_x;  ay = center_y - sun_radius;  bx = center_x - sun_radius*tan(15*deg);  by = center_y;  ex = center_x;  ey = center_y + sun_radius;  dx = center_x + sun_radius*tan(15*deg);  dy = center_y;  // 確定單一菱形區域的塗色正確後, 利用迴圈每次轉動 30 度, 總共轉六次即可塗上十二道光芒區域  for (int i=1;i<=6;i++){  // A  points[0].x = ax+sun_radius*sin(30*deg*i);  points[0].y = ay+sun_radius-sun_radius*cos(30*deg*i);  // B  points[1].x = bx+sr-sr*cos(30*deg*i);  points[1].y = by-sr*sin(30*deg*i);  // E  points[2].x = ex-sun_radius*sin(30*deg*i);  points[2].y = ey-(sun_radius-sun_radius*cos(30*deg*i));  // D  points[3].x = dx-(sr-sr*cos(30*deg*i));  points[3].y = dy+sr*sin(30*deg*i);  // 對菱形區域範圍塗色  gdImageFilledPolygon(img, points, 4, color);  // 在菱形區域外圍畫線, 明確界定菱形範圍  gdImagePolygon(img, points, 4, color);  } } \n', 'tags': '', 'url': 'W6.html'}, {'title': 'C程式練習', 'text': '', 'tags': '', 'url': 'C程式練習.html'}, {'title': '1', 'text': '判斷輸入數字是否為醜數 \n # include <stdio.h>\n# include <string.h>\n\nint main()\n{\nint n,x=0;\n  printf("\\n\\n Check whether a given number is an ugly number:\\n");\n  printf("----------------------------------------------------\\n");\n  printf("Input an integer number: ");\n  scanf("%d",&n);\n\n      if (n <= 0) {  \n            printf("Input a correct number.");  \n        }\n       while (n != 1) \n       {  \n            if (n % 5 == 0) \n            {  \n                n /= 5;  \n            } \n            else if (n % 3 == 0) \n            {  \n                n /= 3;  \n            } \n            else if (n % 2 == 0) \n            {  \n                n /= 2;  \n            } \n            else \n            {  \n                printf("It is not an ugly number.\\n"); \n                x = 1;  \n                break;  \n            }  \n        } \n\t\t        if (x==0)\n\t\t        { \n                printf("It is an ugly number.\\n");\n                }\n} \n \n #   include   <stdio.h> \n #   include   <string.h> \n\n int   main ( ) \n { \n int  n , x = 0 ; \n   printf ( "\\n\\n Check whether a given number is an ugly number:\\n" ) ; \n   printf ( "----------------------------------------------------\\n" ) ; \n   printf ( "Input an integer number: " ) ; \n   scanf ( "%d" , & n ) ; \n\n       if   ( n  <=   0 )   {   \n             printf ( "Input a correct number." ) ;   \n         } \n        while   ( n  !=   1 )  \n        {   \n             if   ( n  %   5   ==   0 )  \n             {   \n                n  /=   5 ;   \n             }  \n             else   if   ( n  %   3   ==   0 )  \n             {   \n                n  /=   3 ;   \n             }  \n             else   if   ( n  %   2   ==   0 )  \n             {   \n                n  /=   2 ;   \n             }  \n             else  \n             {   \n                 printf ( "It is not an ugly number.\\n" ) ;  \n                x  =   1 ;   \n                 break ;   \n             }   \n         }  \n\t\t         if   ( x == 0 ) \n\t\t         {  \n                 printf ( "It is an ugly number.\\n" ) ; \n                 } \n } \n \n #   include   <stdio.h> \n #   include   <string.h> \n\n int   main ( ) \n { \n int  n , x = 0 ; \n   printf ( "\\n\\n Check whether a given number is an ugly number:\\n" ) ; \n   printf ( "----------------------------------------------------\\n" ) ; \n   printf ( "Input an integer number: " ) ; \n   scanf ( "%d" , & n ) ; \n\n       if   ( n  <=   0 )   {   \n             printf ( "Input a correct number." ) ;   \n         } \n        while   ( n  !=   1 )  \n        {   \n             if   ( n  %   5   ==   0 )  \n             {   \n                n  /=   5 ;   \n             }  \n             else   if   ( n  %   3   ==   0 )  \n             {   \n                n  /=   3 ;   \n             }  \n             else   if   ( n  %   2   ==   0 )  \n             {   \n                n  /=   2 ;   \n             }  \n             else  \n             {   \n                 printf ( "It is not an ugly number.\\n" ) ;  \n                x  =   1 ;   \n                 break ;   \n             }   \n         }  \n\t\t         if   ( x == 0 ) \n\t\t         {  \n                 printf ( "It is an ugly number.\\n" ) ; \n                 } \n } \n \n # include <stdio.h>\n# include <string.h>\n\nint main()\n{\nint n,x=0;\n  printf("\\n\\n Check whether a given number is an ugly number:\\n");\n  printf("----------------------------------------------------\\n");\n  printf("Input an integer number: ");\n  scanf("%d",&n);\n\n      if (n <= 0) {  \n            printf("Input a correct number.");  \n        }\n       while (n != 1) \n       {  \n            if (n % 5 == 0) \n            {  \n                n /= 5;  \n            } \n            else if (n % 3 == 0) \n            {  \n                n /= 3;  \n            } \n            else if (n % 2 == 0) \n            {  \n                n /= 2;  \n            } \n            else \n            {  \n                printf("It is not an ugly number.\\n"); \n                x = 1;  \n                break;  \n            }  \n        } \n\t\t        if (x==0)\n\t\t        { \n                printf("It is an ugly number.\\n");\n                }\n} \n \n', 'tags': '', 'url': '1.html'}, {'title': '2', 'text': '反轉整串輸入的數字 \n #include <stdio.h> int reverse(int n) {  int d, y = 0;  while (n) {  d = n % 10;  if ((n > 0 && y > (0x7fffffff - d) / 10) ||  (n < 0 && y < ((signed)0x80000000 - d) / 10)) {  return 0;   }  y = y * 10 + d;  n = n / 10;  }  return y;  } \n int main(void) {  int i = 123;  printf("Original integer: %d ",i);  printf("\\nReverse integer: %d ",reverse(i));  i = 208478933;  printf("\\nOriginal integer: %d ",i);  printf("\\nReverse integer: %d ",reverse(i));  i = -73634;  printf("\\nOriginal integer: %d ",i);  printf("\\nReverse integer: %d ",reverse(i));  return 0; } \n', 'tags': '', 'url': '2.html'}, {'title': '3', 'text': '計算x的n次方 \n #include <stdio.h> #include <limits.h> \n double powxn(double x, int n) {  double k;  if (n == 0) return 1;  k = powxn(x * x, n / 2);  if (n % 2) k = k * x;  return k; } \n int main(void) {  double x = 7.0;  int n = 2;  printf("\\nx = %f, y = %d ", x, n);  printf("\\nResult:(x^n) : %f ",powxn(x, n));  x = 6.2;  n = 3;  printf("\\n\\nx = %f, y = %d ", x, n);  printf("\\nResult:(x^n) : %f ",powxn(x, n));  return 0; } \n', 'tags': '', 'url': '3.html'}, {'title': '4', 'text': '判斷數字是否為環狀質數 \n # include <stdio.h> # include <stdlib.h> # include <stdbool.h> # include <math.h> \n int flg; void chkPrime(long int n) {  long int i;  i=n-1;  while(i>=2)  {  if(n%i==0)  {  flg=1;  }  i--;  } } void AllCombination(long int a) {  long int b1,c1,d1,e1,i,j,k,s1,z1,v1,x[8],y[8],m;  b1=a;  i=0;  while(b1>0)  {  y[i]=b1 % 10;  b1=b1/10;  i++;  }  c1=0;  for(j=i-1;j>=0;j--)  {  x[c1]=y[j];  c1++;  }  m=i;  while(m>0)  {  c1=m-1;  d1=i-1;  e1=0;  s1=0;  while(e1<i)  {  z1=pow(10,d1);  v1=z1*x[c1%i];  c1++;  d1--;  e1++;  s1=s1+v1;  }  m--;  chkPrime(s1);  } } int main() {  long int num1;  printf("\\n\\n Check whether a given number is circular prime or not: \\n");  printf(" -----------------------------------------------------------\\n");  printf(" Input a Number: ");  scanf("%li",&num1);  flg=0;  AllCombination(num1);  if(flg==0)  {  printf(" The given number is a circular prime Number.\\n");  }  else  {  printf(" The given number is not a circular prime Number.\\n");  }  return 0;   printf("\\n"); } \n', 'tags': '', 'url': '4.html'}, {'title': '5', 'text': '計算輸入數字的平方 \n #include <stdio.h> \n double square(double num) {  return (num * num); } int main() {  int num;  double n;  printf("\\n\\n Function : find square of any number :\\n");  printf("------------------------------------------------\\n");     printf("Input any number for square : ");  scanf("%d", &num);  n = square(num);  printf("The square of %d is : %.2f\\n", num, n);   return 0; } \n', 'tags': '', 'url': '5.html'}, {'title': '6', 'text': '判斷輸入數字為基數或偶數 \n #include <stdio.h>   //if the least significant bit is 1 the number is odd and 0 the number is even  int checkOddEven(int n1) {   return (n1 & 1);//The & operator does a bitwise and, } \n int main() {  int n1;  printf("\\n\\n Function : check the number is even or odd:\\n");  printf("------------------------------------------------\\n");   printf("Input any number : ");  scanf("%d", &n1); \n // If checkOddEven() function returns 1 then the number is odd   if(checkOddEven(n1))  {  printf("The entered number is odd.\\n\\n");  }  else  {  printf("The entered number is even.\\n\\n");  }  return 0; } \n', 'tags': '', 'url': '6.html'}, {'title': '7', 'text': '利用函數將數入數字變為二進制 \n #include<stdio.h> \n long toBin(int); \n int main() {  long bno;  int dno;  printf("\\n\\n Function : convert decimal to binary :\\n");  printf("-------------------------------------------\\n");   printf(" Input any decimal number : ");  scanf("%d",&dno);  bno = toBin(dno);  printf("\\n The Binary value is : %ld\\n\\n",bno); \n return 0; } long toBin(int dno) {  long bno=0,remainder,f=1;  while(dno != 0)  {  remainder = dno % 2;  bno = bno + remainder * f;  f = f * 10;  dno = dno / 2;  }  return bno; } \n', 'tags': '', 'url': '7.html'}, {'title': '8', 'text': '判斷輸入數字是否為完全立方數 \n # include <stdio.h> # include <stdlib.h> # include <math.h> \n int main()  {  int num, curoot,ans; \n printf("\\n\\n Check whether a number is a perfect cube or not: \\n");  printf(" -----------------------------------------------------\\n");  printf(" Input a number: ");  scanf("%d",&num); curoot=round(pow(num, 1.0/3.0)); \n if(curoot*curoot*curoot==num) {  printf(" The number is a perfect Cube of %d \\n",curoot);  } else {  printf(" The number is not a perfect Cube.\\n");  } } \n', 'tags': '', 'url': '8.html'}, {'title': '9', 'text': '輸出目前的日期和時間 \n #include <time.h> #include <stdio.h>  #include <stdlib.h> \n int main(void) {  time_t cur_time;  char* cur_t_string;  cur_time = time(NULL);  if (cur_time == ((time_t)-1))  {  (void) fprintf(stderr, "Failure to get the current date and time.\\n");  exit(EXIT_FAILURE);  }  cur_t_string = ctime(&cur_time); //convert to local time format  if (cur_t_string == NULL)  {  (void) fprintf(stderr, "Failure to convert the current date and time.\\n");  exit(EXIT_FAILURE);  }  (void) printf("\\n The Current time is : %s \\n", cur_t_string);  exit(EXIT_SUCCESS); } \n', 'tags': '', 'url': '9.html'}, {'title': '10', 'text': '輸出月初到現在過了幾秒 \n #include <stdio.h> #include <time.h>   int main(void) {  time_t now;  time(&now);    struct tm beg_month;  beg_month = *localtime(&now);  beg_month.tm_hour = 0;  beg_month.tm_min = 0;  beg_month.tm_sec = 0;  beg_month.tm_mday = 1;    double seconds = difftime(now, mktime(&beg_month));  printf("\\n %.f seconds passed since the beginning of the month.\\n\\n", seconds);  return 0; } \n  editor2 結束  \n \n \n \n', 'tags': '', 'url': '10.html'}]};